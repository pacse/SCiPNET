''' File for all ascii art stuff '''
from utils import clear, get_name, printc, timestamp, User
from time import sleep as sp
from random import uniform as uf

def startup() -> None:
    '''
    Prints a fancy startup screen
    (Ascii art generated by ChatGPT & patorjk.com/software/taag/ Font: ANSI Shadow)
    '''
    clear()

    # main terminal screen
    print()
    printc("███▀▀▀▀███▀▀▀▀███▀▀▀▀███▀▀▀▀███▀▀▀▀███▀▀▀▀███▀▀▀▀███▀▀▀▀███▀▀▀▀███▀▀▀▀███▀▀▀▀███▀▀▀▀███▀▀▀▀███▀▀▀▀███▀▀▀▀███▀▀▀▀███▀")
    printc("███████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓███████")
    printc("██ ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ ░░ ██")
    print()
    printc("███████╗ ██████╗██████╗     ███████╗ ██████╗ ██╗   ██╗███╗   ██╗██████╗  █████╗ ████████╗██╗ ██████╗ ███╗   ██╗")
    printc("██╔════╝██╔════╝██╔══██╗    ██╔════╝██╔═══██╗██║   ██║████╗  ██║██╔══██╗██╔══██╗╚══██╔══╝██║██╔═══██╗████╗  ██║")
    printc("███████╗██║     ██████╔╝    █████╗  ██║   ██║██║   ██║██╔██╗ ██║██║  ██║███████║   ██║   ██║██║   ██║██╔██╗ ██║")
    printc("╚════██║██║     ██╔═══╝     ██╔══╝  ██║   ██║██║   ██║██║╚██╗██║██║  ██║██╔══██║   ██║   ██║██║   ██║██║╚██╗██║")
    printc("███████║╚██████╗██║         ██║     ╚██████╔╝╚██████╔╝██║ ╚████║██████╔╝██║  ██║   ██║   ██║╚██████╔╝██║ ╚████║")
    printc("╚══════╝ ╚═════╝╚═╝         ╚═╝      ╚═════╝  ╚═════╝ ╚═╝  ╚═══╝╚═════╝ ╚═╝  ╚═╝   ╚═╝   ╚═╝ ╚═════╝ ╚═╝  ╚═══╝")
    printc("Secure | Contain | Protect")
    print()
    printc("— [ ACCESS PORTAL: SCiPNET TERMINAL v7.23.4 ] —")
    printc("██ ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ ░░ ██")
    printc("███████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓███████")
    printc("███▄▄▄▄███▄▄▄▄███▄▄▄▄███▄▄▄▄███▄▄▄▄███▄▄▄▄███▄▄▄▄███▄▄▄▄███▄▄▄▄███▄▄▄▄███▄▄▄▄███▄▄▄▄███▄▄▄▄███▄▄▄▄███▄▄▄▄███▄▄▄▄███▄")
    print()

    # simulate loading (bc it's cool)
    sp(uf(0, 1))
    printc("> Establishing encrypted tunnel to Deepwell Servers . . .")
    sp(uf(0, 1))
    printc("> Syncing with Overwatch Command . . .")
    sp(uf(0, 1))
    printc("> Validating cryptographic token . . .")
    sp(uf(0, 1))
    printc("> SCiPNET interface launch sequence initiated . . .")
    sp(uf(0, 1))
    printc("SCP Foundation CoreNode Connection: STABLE")
    sp(uf(0, 0.5))
    printc("[The Foundation database is CLASSIFIED]")
    printc("[Unauthorized access will result in detainment]")
    print()

def login(usr: User) -> None:
    '''
    prints fancy login messages when
    a user logs in.
    Art by ChatGPT
    '''
    reused1 = "/" * 4 + " " * 112 + "/" * 4
    reused2 = "/" * 120
    title = get_name("titles", usr.title_id)

    if title == "O5 Council Member":
        lines = [
            reused2,
            reused1,
            "////" + f"{'<< O5 AUTHORIZATION VERIFIED >>':^112}" + "////",
            reused1,
            "////" + f"{'CLEARANCE LEVEL: 6 - COSMIC TOP SECRET':^112}" + "////",
            reused1,
            "////" + f"{f'Welcome back, {usr.name}.':^112}" + "////",
            "////" + f"{f'This session is being logged by CoreNode Zero.':^112}" + "////",
            reused1,
            "////" + f"{'SYSTEM STATUS: OPERATIONAL | DEEPWELL CHANNEL ENCRYPTED':^112}" + "////",
            reused1,
            reused2,
        ]

    elif title == "Site Director":
        lines = [
            reused2,
            reused1,
            "////" + f"{'<< DIRECTOR AUTHORIZATION VERIFIED >>':^112}" + "////",
            reused1,
            "////" + f"{'CLEARANCE LEVEL: 5 - TOP SECRET':^112}" + "////",
            reused1,
            "////" + f"{f'Welcome back, {usr.name}.':^112}" + "////",
            "////" + f"{'All actions are recorded and reviewed by O5 Liaison - Node Black':^112}" + "////",
            reused1,
            "////" + f"{'SYSTEM STATUS: OPERATIONAL | DEEPWELL CHANNEL ENCRYPTED':^112}" + "////",
            reused1,
            reused2,
        ]

    elif title == "Aministrator":
        lines = [
            reused2,
            reused1,
            "////" + f"{'<< ADMINISTRATOR AUTHORIZATION VERIFIED >>':^112}" + "////",
            reused1,
            "////" + f"{'CLEARANCE LEVEL: UNBOUNDED | OVERRIDE: UNIVERSAL | LOGGING: DISABLED':^112}" + "////",
            reused1,
            "////" + f"{'Welcome, Administrator. All systems stand by for your instruction.':^112}" + "////",
            "////" + f"{'There are no restrictions. There are no records.':^112}" + "////",
            reused1,
            "////" + f"{'SYSTEM STATUS: OPERATIONAL | ENCLAVE MODE ACTIVE':^112}" + "////",
            reused1,
            reused2,
        ]

    else:
        lines = [
            f"Welcome back, {title} {usr.name}",
            f"(Clearance Level {usr.clearance_level_id} - {get_name('clearance_levels', usr.clearance_level_id)})"
        ]

    [printc(line) for line in lines]

# redacted message
def redacted(file: str, file_classification: int, clearance: int) -> None:
    '''
    prints a message saying {file} is above your clearance
    art by ChatGPT
    '''
    lines = [
        "",
        "╔══════════════════════════════╗",
        "║        ACCESS DENIED         ║",
        "╚══════════════════════════════╝",
        "",
        f"FILE_REF: {file} REDACTED",
        f"CLEARANCE {get_name('clearance_levels', file_classification).upper()} REQUIRED",
        f"(YOU ARE CLEARANCE {get_name('clearance_levels', clearance).upper()})",
        f"Logged to Overwatch Command at {timestamp()}",
    ]

    [printc(line) for line in lines]

# data expunged message
def expunged(file: str) -> None:
    '''
    prints a message saying {file} has been expunged
    art by ChatGPT
    '''
    lines = [
        "",
        "╔══════════════════════════════╗",
        "║        DATA EXPUNGED         ║",
        "╚══════════════════════════════╝",
        "",
        f"FILE_REF: {file} NOT FOUND",
        f"Logged to Overwatch Command at {timestamp()}",
    ]

    [printc(line) for line in lines]

# access granted message
def granted(file: str) -> None:
  '''
  prints a message saying access has been granted to a file
  art by ChatGPT
  '''
  lines = [
      "",
      "╔══════════════════════════════╗",
      "║        ACCESS GRANTED        ║",
      "╚══════════════════════════════╝",
      "",
      f"FILE_REF: {file} ACCESS GRANTED",
      f"Logged to Overwatch Command at {timestamp()}",
  ]

  [printc(line) for line in lines]